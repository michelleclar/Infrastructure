[versions]
testcontainers = "1.20.4"
quarkus = "3.19.3"
commons = "4.4"
xml = "4.0.2"
guava = "33.2.1-jre"
jdbi = "3.49.0"
velocity = "2.4.1"
jooq = "3.20.3"
temporal = "0.1.2"
[libraries]
quarkus-platform-bom = { module = "io.quarkus.platform:quarkus-bom", version.ref = "quarkus" }
quarkus-camel-platform-bom = { module = "io.quarkus.platform:quarkus-camel-bom", version.ref = "quarkus" }
quarkus-smallrye-openapi = { module = "io.quarkus:quarkus-smallrye-openapi", version.ref = "quarkus" }
quarkus-arc = { module = "io.quarkus:quarkus-arc", version.ref = "quarkus" } #CDI
quarkus-config-yaml = { module = "io.quarkus:quarkus-arc", version.ref = "quarkus" }
quarkus-rest = { module = "io.quarkus:quarkus-rest", version.ref = "quarkus" }
quarkus-reactive-routes = { module = "io.quarkus:quarkus-reactive-routes", version.ref = "quarkus" }
quarkus-vertx = { module = "io.quarkus:quarkus-vertx", version.ref = "quarkus" }
quarkus-jsonp = { module = "io.quarkus:quarkus-jsonp", version.ref = "quarkus" }
quarkus-jackson = { module = "io.quarkus:quarkus-rest-jackson", version.ref = "quarkus" }
quarkus-panache = { module = "io.quarkus:quarkus-hibernate-orm-panache", version.ref = "quarkus" }
quarkus-hibernate-orm = { module = "io.quarkus:quarkus-hibernate-orm", version.ref = "quarkus" }
quarkus-smallrye-context-propagation = { module = "io.quarkus:quarkus-smallrye-context-propagation", version.ref = "quarkus" }
quarkus-websocket = { module = "io.quarkus:quarkus-websockets-client", version.ref = "quarkus" }
quarkus-oidc = { module = "io.quarkus:quarkus-oidc", version.ref = "quarkus" }
quarkus-keycloak = { module = "io.quarkus:quarkus-keycloak-authorization", version.ref = "quarkus" }
xml-bind = { module = "jakarta.xml.bind:jakarta.xml.bind-api", version.ref = "xml" }
#xml-bind = { module = "io.quarkus:quarkus-jaxb", version.ref = "quarkus" }
jdbi-core = { module = "org.jdbi:jdbi3-core", version.ref = "jdbi" }
jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
jooq-meta = { module = "org.jooq:jooq-meta", version.ref = "jooq" }
jooq-codegen = { module = "org.jooq:jooq-codegen", version.ref = "jooq" }
quarkus-vault = { module = "io.quarkiverse:quarkus-vault", version.ref = "quarkus" }
quarkus-cache = { module = "io.quarkus:quarkus-cache", version.ref = "quarkus" }
quarkus-agroal = { module = "io.quarkus:quarkus-agroal", version.ref = "quarkus" }
quarkus-jdbc-postgresql = { module = "io.quarkus:quarkus-jdbc-postgresql", version.ref = "quarkus" }
quarkus-reactive-pg-client = { module = "io.quarkus:quarkus-reactive-pg-client", version.ref = "quarkus" }
quarkus-redis = { module = "io.quarkus:quarkus-redis-client", version.ref = "quarkus" }
quarkus-flyway = { module = "io.quarkus:quarkus-flyway", version.ref = "quarkus" }
quarkus-health = { module = "io.quarkus:quarkus-smallrye-health", version.ref = "quarkus" }
quarkus-graphql = { module = "io.quarkus:quarkus-smallrye-graphql", version.ref = "quarkus" }
quarkus-rest-client-jackson = { module = "io.quarkus:quarkus-rest-client-jackson", version.ref = "quarkus" }
quarkus-rest-client = { module = "io.quarkus:quarkus-rest-client-jackson", version.ref = "quarkus" }
quarkus-opentelemetry = { module = "io.quarkus:quarkus-opentelemetry", version.ref = "quarkus" }
quarkus-micrometer-opentelemetry = { module = "io.quarkus:quarkus-micrometer-opentelemetry", version.ref = "quarkus" }
quarkus-micrometer-registry-prometheus = { module = "io.quarkus:quarkus-micrometer-registry-prometheus", version.ref = "quarkus" }
quarkus-observability-devservices-lgtm = { module = "io.quarkus:quarkus-observability-devservices-lgtm", version.ref = "quarkus" }
quarkus-micrometer = { module = "io.quarkus:quarkus-micrometer", version.ref = "quarkus" }
quarkus-elasticsearch = { module = "io.quarkus:quarkus-elasticsearch-java-client", version.ref = "quarkus" }
quarkus-pulsar = { module = "io.quarkus:quarkus-messaging-pulsar", version.ref = "quarkus" }
quarkus-grpc = { module = "io.quarkus:quarkus-grpc", version.ref = "quarkus" }
quarkus-junit5 = { module = "io.quarkus:quarkus-junit5", version.ref = "quarkus" }
quarkus-jwt = { module = "io.quarkus:quarkus-smallrye-jwt", version.ref = "quarkus" }
quarkus-jwt-build = { module = "io.quarkus:quarkus-smallrye-jwt-build", version.ref = "quarkus" }
quarkus-smtp = { module = "io.quarkus:quarkus-mailer", version.ref = "quarkus" }
quarkus-temporal = { module = "io.quarkiverse.temporal:quarkus-temporal", version.ref = "temporal" }
quarkus-temporal-test = { module = "io.quarkiverse.temporal:quarkus-temporal-test", version.ref = "temporal" }
quarkus-smallrye-fault-tolerance = { module = "io.quarkus:quarkus-smallrye-fault-tolerance", version.ref = "quarkus" }
openfga = { module = "dev.openfga:openfga-sdk", version.require = "0.8.1" }
stork = { module = "io.quarkus:quarkus-smallrye-stork", version.ref = "quarkus" }
consul-stork = { module = "io.smallrye.stork:stork-service-discovery-consul", version.ref = "quarkus" }
consul = { module = "io.quarkiverse.config:quarkus-config-consul", version.ref = "quarkus" }
consul-client = { module = "io.smallrye.reactive:smallrye-mutiny-vertx-consul-client", version.ref = "quarkus" }
vertx-client = { module = "io.smallrye.reactive:smallrye-mutiny-vertx-web-client", version.ref = "quarkus" }
velocity = { module = "org.apache.velocity:velocity-engine-core", version.ref = "velocity" }

guava = { module = "com.google.guava:guava", version.ref = "guava" }
commons = { module = "org.apache.commons:commons-collections4", version.ref = "commons" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-consul = { module = "org.testcontainers:consul", version.ref = "testcontainers" }
testcontainers-pulsar = { module = "org.testcontainers:pulsar", version.ref = "testcontainers" }
testcontainers-neo4j = { module = "org.testcontainers:neo4j", version.ref = "testcontainers" }
testcontainers-elasticsearch = { module = "org.testcontainers:elasticsearch", version.ref = "testcontainers" }
testcontainers-milvus = { module = "org.testcontainers:milvus", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
assured = { module = "io.rest-assured:rest-assured", version.ref = "quarkus" }

[bundles]
share = ["quarkus-arc"]
web = [
    "quarkus-rest",
    "quarkus-jackson",
    "quarkus-smallrye-openapi",
    "quarkus-reactive-routes",
    "quarkus-vertx",
    "quarkus-smallrye-fault-tolerance",
]

# base bundle
base = [
    "xml-bind",
]

auth = ["quarkus-oidc", "quarkus-keycloak"]

discover = ["stork", "consul", "consul-stork", "consul-client"]


persistence = [
    "quarkus-jdbc-postgresql",
    #    "quarkus-reactive-pg-client",
    #    "quarkus-hibernate-orm",
    #    "quarkus-panache",
    "jdbi-core",
    "quarkus-agroal",
    "velocity",
    "jooq"
]

cache = ["quarkus-cache", "quarkus-redis"]
mq = ["quarkus-pulsar"]
search = ["quarkus-elasticsearch"]
utils = ["guava"]
protocol = ["quarkus-grpc", "quarkus-websocket"]
#metrics = ["quarkus-observability-devservices-lgtm","quarkus-micrometer-registry-prometheus", "quarkus-opentelemetry", "quarkus-micrometer-opentelemetry"]
metrics = ["quarkus-observability-devservices-lgtm", "quarkus-opentelemetry"]
test = [
    "quarkus-flyway",
    "assured",
    "quarkus-junit5",
    # "testcontainers-junit-jupiter",
    # "testcontainers",
    # "testcontainers-postgresql",
    # "testcontainers-pulsar",
    # "testcontainers-consul",
    # "testcontainers-neo4j",
    # "testcontainers-elasticsearch",
    # "testcontainers-milvus"
]
[plugins]
quarkus = { id = "io.quarkus", version.ref = "quarkus" }
