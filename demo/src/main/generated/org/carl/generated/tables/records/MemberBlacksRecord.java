/*
 * This file is generated by jOOQ.
 */
package org.carl.generated.tables.records;

import org.carl.generated.tables.MemberBlacks;
import org.carl.generated.tables.interfaces.IMemberBlacks;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class MemberBlacksRecord extends UpdatableRecordImpl<MemberBlacksRecord>
        implements IMemberBlacks {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.member_blacks.id</code>.
     */
    public MemberBlacksRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.member_blacks.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IMemberBlacks from) {
        setId(from.getId());
        resetChangedOnNotNull();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MemberBlacksRecord
     */
    public MemberBlacksRecord() {
        super(MemberBlacks.MEMBER_BLACKS);
    }

    /**
     * Create a detached, initialised MemberBlacksRecord
     */
    public MemberBlacksRecord(Long id) {
        super(MemberBlacks.MEMBER_BLACKS);

        setId(id);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised MemberBlacksRecord
     */
    public MemberBlacksRecord(org.carl.generated.tables.pojos.MemberBlacks value) {
        super(MemberBlacks.MEMBER_BLACKS);

        if (value != null) {
            setId(value.getId());
            resetChangedOnNotNull();
        }
    }
}
