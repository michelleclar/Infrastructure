/*
 * This file is generated by jOOQ.
 */
package org.carl.generated.tables.pojos;

import org.carl.generated.tables.interfaces.IImChannelView;
import org.jooq.JSONB;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class ImChannelView implements IImChannelView {

    private static final long serialVersionUID = 1L;

    private Long channelViewId;
    private Long channelId;
    private JSONB channelView;

    public ImChannelView() {}

    public ImChannelView(IImChannelView value) {
        this.channelViewId = value.getChannelViewId();
        this.channelId = value.getChannelId();
        this.channelView = value.getChannelView();
    }

    public ImChannelView(Long channelViewId, Long channelId, JSONB channelView) {
        this.channelViewId = channelViewId;
        this.channelId = channelId;
        this.channelView = channelView;
    }

    /**
     * Getter for <code>public.im_channel_view.channel_view_id</code>.
     */
    @Override
    public Long getChannelViewId() {
        return this.channelViewId;
    }

    /**
     * Setter for <code>public.im_channel_view.channel_view_id</code>.
     */
    public ImChannelView setChannelViewId(Long channelViewId) {
        this.channelViewId = channelViewId;
        return this;
    }

    /**
     * Getter for <code>public.im_channel_view.channel_id</code>. 频道id
     */
    @Override
    public Long getChannelId() {
        return this.channelId;
    }

    /**
     * Setter for <code>public.im_channel_view.channel_id</code>. 频道id
     */
    public ImChannelView setChannelId(Long channelId) {
        this.channelId = channelId;
        return this;
    }

    /**
     * Getter for <code>public.im_channel_view.channel_view</code>.
     */
    @Override
    public JSONB getChannelView() {
        return this.channelView;
    }

    /**
     * Setter for <code>public.im_channel_view.channel_view</code>.
     */
    public ImChannelView setChannelView(JSONB channelView) {
        this.channelView = channelView;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;
        final ImChannelView other = (ImChannelView) obj;
        if (this.channelViewId == null) {
            if (other.channelViewId != null) return false;
        } else if (!this.channelViewId.equals(other.channelViewId)) return false;
        if (this.channelId == null) {
            if (other.channelId != null) return false;
        } else if (!this.channelId.equals(other.channelId)) return false;
        if (this.channelView == null) {
            if (other.channelView != null) return false;
        } else if (!this.channelView.equals(other.channelView)) return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result =
                prime * result + ((this.channelViewId == null) ? 0 : this.channelViewId.hashCode());
        result = prime * result + ((this.channelId == null) ? 0 : this.channelId.hashCode());
        result = prime * result + ((this.channelView == null) ? 0 : this.channelView.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ImChannelView (");

        sb.append(channelViewId);
        sb.append(", ").append(channelId);
        sb.append(", ").append(channelView);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IImChannelView from) {
        setChannelViewId(from.getChannelViewId());
        setChannelId(from.getChannelId());
        setChannelView(from.getChannelView());
    }
}
