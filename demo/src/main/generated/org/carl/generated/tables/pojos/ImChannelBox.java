/*
 * This file is generated by jOOQ.
 */
package org.carl.generated.tables.pojos;

import java.time.OffsetDateTime;
import org.carl.generated.tables.interfaces.IImChannelBox;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class ImChannelBox implements IImChannelBox {

    private static final long serialVersionUID = 1L;

    private Long channelBoxId;
    private OffsetDateTime createdAt;
    private OffsetDateTime updatedAt;
    private Long memberId;
    private Boolean isTop;
    private Boolean isDelete;
    private Boolean isSubscribe;
    private Long channelId;

    public ImChannelBox() {}

    public ImChannelBox(IImChannelBox value) {
        this.channelBoxId = value.getChannelBoxId();
        this.createdAt = value.getCreatedAt();
        this.updatedAt = value.getUpdatedAt();
        this.memberId = value.getMemberId();
        this.isTop = value.getIsTop();
        this.isDelete = value.getIsDelete();
        this.isSubscribe = value.getIsSubscribe();
        this.channelId = value.getChannelId();
    }

    public ImChannelBox(
            Long channelBoxId,
            OffsetDateTime createdAt,
            OffsetDateTime updatedAt,
            Long memberId,
            Boolean isTop,
            Boolean isDelete,
            Boolean isSubscribe,
            Long channelId) {
        this.channelBoxId = channelBoxId;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.memberId = memberId;
        this.isTop = isTop;
        this.isDelete = isDelete;
        this.isSubscribe = isSubscribe;
        this.channelId = channelId;
    }

    /**
     * Getter for <code>public.im_channel_box.channel_box_id</code>.
     */
    @Override
    public Long getChannelBoxId() {
        return this.channelBoxId;
    }

    /**
     * Setter for <code>public.im_channel_box.channel_box_id</code>.
     */
    public ImChannelBox setChannelBoxId(Long channelBoxId) {
        this.channelBoxId = channelBoxId;
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.created_at</code>.
     */
    @Override
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.im_channel_box.created_at</code>.
     */
    public ImChannelBox setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.updated_at</code>.
     */
    @Override
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.im_channel_box.updated_at</code>.
     */
    public ImChannelBox setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.member_id</code>. 用户id
     */
    @Override
    public Long getMemberId() {
        return this.memberId;
    }

    /**
     * Setter for <code>public.im_channel_box.member_id</code>. 用户id
     */
    public ImChannelBox setMemberId(Long memberId) {
        this.memberId = memberId;
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.is_top</code>. 是否置顶
     */
    @Override
    public Boolean getIsTop() {
        return this.isTop;
    }

    /**
     * Setter for <code>public.im_channel_box.is_top</code>. 是否置顶
     */
    public ImChannelBox setIsTop(Boolean isTop) {
        this.isTop = isTop;
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.is_delete</code>. 是否删除
     */
    @Override
    public Boolean getIsDelete() {
        return this.isDelete;
    }

    /**
     * Setter for <code>public.im_channel_box.is_delete</code>. 是否删除
     */
    public ImChannelBox setIsDelete(Boolean isDelete) {
        this.isDelete = isDelete;
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.is_subscribe</code>. 是否订阅消息通知
     */
    @Override
    public Boolean getIsSubscribe() {
        return this.isSubscribe;
    }

    /**
     * Setter for <code>public.im_channel_box.is_subscribe</code>. 是否订阅消息通知
     */
    public ImChannelBox setIsSubscribe(Boolean isSubscribe) {
        this.isSubscribe = isSubscribe;
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.channel_id</code>. 频道id
     */
    @Override
    public Long getChannelId() {
        return this.channelId;
    }

    /**
     * Setter for <code>public.im_channel_box.channel_id</code>. 频道id
     */
    public ImChannelBox setChannelId(Long channelId) {
        this.channelId = channelId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;
        final ImChannelBox other = (ImChannelBox) obj;
        if (this.channelBoxId == null) {
            if (other.channelBoxId != null) return false;
        } else if (!this.channelBoxId.equals(other.channelBoxId)) return false;
        if (this.createdAt == null) {
            if (other.createdAt != null) return false;
        } else if (!this.createdAt.equals(other.createdAt)) return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null) return false;
        } else if (!this.updatedAt.equals(other.updatedAt)) return false;
        if (this.memberId == null) {
            if (other.memberId != null) return false;
        } else if (!this.memberId.equals(other.memberId)) return false;
        if (this.isTop == null) {
            if (other.isTop != null) return false;
        } else if (!this.isTop.equals(other.isTop)) return false;
        if (this.isDelete == null) {
            if (other.isDelete != null) return false;
        } else if (!this.isDelete.equals(other.isDelete)) return false;
        if (this.isSubscribe == null) {
            if (other.isSubscribe != null) return false;
        } else if (!this.isSubscribe.equals(other.isSubscribe)) return false;
        if (this.channelId == null) {
            if (other.channelId != null) return false;
        } else if (!this.channelId.equals(other.channelId)) return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.channelBoxId == null) ? 0 : this.channelBoxId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.memberId == null) ? 0 : this.memberId.hashCode());
        result = prime * result + ((this.isTop == null) ? 0 : this.isTop.hashCode());
        result = prime * result + ((this.isDelete == null) ? 0 : this.isDelete.hashCode());
        result = prime * result + ((this.isSubscribe == null) ? 0 : this.isSubscribe.hashCode());
        result = prime * result + ((this.channelId == null) ? 0 : this.channelId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ImChannelBox (");

        sb.append(channelBoxId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(memberId);
        sb.append(", ").append(isTop);
        sb.append(", ").append(isDelete);
        sb.append(", ").append(isSubscribe);
        sb.append(", ").append(channelId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IImChannelBox from) {
        setChannelBoxId(from.getChannelBoxId());
        setCreatedAt(from.getCreatedAt());
        setUpdatedAt(from.getUpdatedAt());
        setMemberId(from.getMemberId());
        setIsTop(from.getIsTop());
        setIsDelete(from.getIsDelete());
        setIsSubscribe(from.getIsSubscribe());
        setChannelId(from.getChannelId());
    }
}
