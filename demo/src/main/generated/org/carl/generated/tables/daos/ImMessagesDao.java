/*
 * This file is generated by jOOQ.
 */
package org.carl.generated.tables.daos;

import java.time.OffsetDateTime;
import java.util.List;
import java.util.Optional;
import org.carl.generated.tables.ImMessages;
import org.carl.generated.tables.records.ImMessagesRecord;
import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class ImMessagesDao
        extends DAOImpl<ImMessagesRecord, org.carl.generated.tables.pojos.ImMessages, Long> {

    /**
     * Create a new ImMessagesDao without any configuration
     */
    public ImMessagesDao() {
        super(ImMessages.IM_MESSAGES, org.carl.generated.tables.pojos.ImMessages.class);
    }

    /**
     * Create a new ImMessagesDao with an attached configuration
     */
    public ImMessagesDao(Configuration configuration) {
        super(
                ImMessages.IM_MESSAGES,
                org.carl.generated.tables.pojos.ImMessages.class,
                configuration);
    }

    @Override
    public Long getId(org.carl.generated.tables.pojos.ImMessages object) {
        return object.getMessageId();
    }

    /**
     * Fetch records that have <code>message_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImMessages> fetchRangeOfMessageId(
            Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ImMessages.IM_MESSAGES.MESSAGE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>message_id IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImMessages> fetchByMessageId(Long... values) {
        return fetch(ImMessages.IM_MESSAGES.MESSAGE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>message_id = value</code>
     */
    public org.carl.generated.tables.pojos.ImMessages fetchOneByMessageId(Long value) {
        return fetchOne(ImMessages.IM_MESSAGES.MESSAGE_ID, value);
    }

    /**
     * Fetch a unique record that has <code>message_id = value</code>
     */
    public Optional<org.carl.generated.tables.pojos.ImMessages> fetchOptionalByMessageId(
            Long value) {
        return fetchOptional(ImMessages.IM_MESSAGES.MESSAGE_ID, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImMessages> fetchRangeOfCreatedAt(
            OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(ImMessages.IM_MESSAGES.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImMessages> fetchByCreatedAt(
            OffsetDateTime... values) {
        return fetch(ImMessages.IM_MESSAGES.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImMessages> fetchRangeOfUpdatedAt(
            OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(ImMessages.IM_MESSAGES.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImMessages> fetchByUpdatedAt(
            OffsetDateTime... values) {
        return fetch(ImMessages.IM_MESSAGES.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>content BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImMessages> fetchRangeOfContent(
            JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(ImMessages.IM_MESSAGES.CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImMessages> fetchByContent(JSONB... values) {
        return fetch(ImMessages.IM_MESSAGES.CONTENT, values);
    }
}
