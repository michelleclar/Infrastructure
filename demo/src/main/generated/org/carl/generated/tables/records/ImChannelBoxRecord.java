/*
 * This file is generated by jOOQ.
 */
package org.carl.generated.tables.records;

import java.time.OffsetDateTime;
import org.carl.generated.tables.ImChannelBox;
import org.carl.generated.tables.interfaces.IImChannelBox;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class ImChannelBoxRecord extends UpdatableRecordImpl<ImChannelBoxRecord>
        implements IImChannelBox {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.im_channel_box.channel_box_id</code>.
     */
    public ImChannelBoxRecord setChannelBoxId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.channel_box_id</code>.
     */
    @Override
    public Long getChannelBoxId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.im_channel_box.created_at</code>.
     */
    public ImChannelBoxRecord setCreatedAt(OffsetDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.created_at</code>.
     */
    @Override
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>public.im_channel_box.updated_at</code>.
     */
    public ImChannelBoxRecord setUpdatedAt(OffsetDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.updated_at</code>.
     */
    @Override
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.im_channel_box.member_id</code>. 用户id
     */
    public ImChannelBoxRecord setMemberId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.member_id</code>. 用户id
     */
    @Override
    public Long getMemberId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.im_channel_box.is_top</code>. 是否置顶
     */
    public ImChannelBoxRecord setIsTop(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.is_top</code>. 是否置顶
     */
    @Override
    public Boolean getIsTop() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.im_channel_box.is_delete</code>. 是否删除
     */
    public ImChannelBoxRecord setIsDelete(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.is_delete</code>. 是否删除
     */
    @Override
    public Boolean getIsDelete() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.im_channel_box.is_subscribe</code>. 是否订阅消息通知
     */
    public ImChannelBoxRecord setIsSubscribe(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.is_subscribe</code>. 是否订阅消息通知
     */
    @Override
    public Boolean getIsSubscribe() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.im_channel_box.channel_id</code>. 频道id
     */
    public ImChannelBoxRecord setChannelId(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.im_channel_box.channel_id</code>. 频道id
     */
    @Override
    public Long getChannelId() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IImChannelBox from) {
        setChannelBoxId(from.getChannelBoxId());
        setCreatedAt(from.getCreatedAt());
        setUpdatedAt(from.getUpdatedAt());
        setMemberId(from.getMemberId());
        setIsTop(from.getIsTop());
        setIsDelete(from.getIsDelete());
        setIsSubscribe(from.getIsSubscribe());
        setChannelId(from.getChannelId());
        resetChangedOnNotNull();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImChannelBoxRecord
     */
    public ImChannelBoxRecord() {
        super(ImChannelBox.IM_CHANNEL_BOX);
    }

    /**
     * Create a detached, initialised ImChannelBoxRecord
     */
    public ImChannelBoxRecord(
            Long channelBoxId,
            OffsetDateTime createdAt,
            OffsetDateTime updatedAt,
            Long memberId,
            Boolean isTop,
            Boolean isDelete,
            Boolean isSubscribe,
            Long channelId) {
        super(ImChannelBox.IM_CHANNEL_BOX);

        setChannelBoxId(channelBoxId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setMemberId(memberId);
        setIsTop(isTop);
        setIsDelete(isDelete);
        setIsSubscribe(isSubscribe);
        setChannelId(channelId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ImChannelBoxRecord
     */
    public ImChannelBoxRecord(org.carl.generated.tables.pojos.ImChannelBox value) {
        super(ImChannelBox.IM_CHANNEL_BOX);

        if (value != null) {
            setChannelBoxId(value.getChannelBoxId());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            setMemberId(value.getMemberId());
            setIsTop(value.getIsTop());
            setIsDelete(value.getIsDelete());
            setIsSubscribe(value.getIsSubscribe());
            setChannelId(value.getChannelId());
            resetChangedOnNotNull();
        }
    }
}
