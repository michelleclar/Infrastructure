/*
 * This file is generated by jOOQ.
 */
package org.carl.generated.tables.daos;

import java.util.List;
import java.util.Optional;
import org.carl.generated.tables.ImChannelView;
import org.carl.generated.tables.records.ImChannelViewRecord;
import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class ImChannelViewDao
        extends DAOImpl<ImChannelViewRecord, org.carl.generated.tables.pojos.ImChannelView, Long> {

    /**
     * Create a new ImChannelViewDao without any configuration
     */
    public ImChannelViewDao() {
        super(ImChannelView.IM_CHANNEL_VIEW, org.carl.generated.tables.pojos.ImChannelView.class);
    }

    /**
     * Create a new ImChannelViewDao with an attached configuration
     */
    public ImChannelViewDao(Configuration configuration) {
        super(
                ImChannelView.IM_CHANNEL_VIEW,
                org.carl.generated.tables.pojos.ImChannelView.class,
                configuration);
    }

    @Override
    public Long getId(org.carl.generated.tables.pojos.ImChannelView object) {
        return object.getChannelViewId();
    }

    /**
     * Fetch records that have <code>channel_view_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImChannelView> fetchRangeOfChannelViewId(
            Long lowerInclusive, Long upperInclusive) {
        return fetchRange(
                ImChannelView.IM_CHANNEL_VIEW.CHANNEL_VIEW_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>channel_view_id IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImChannelView> fetchByChannelViewId(
            Long... values) {
        return fetch(ImChannelView.IM_CHANNEL_VIEW.CHANNEL_VIEW_ID, values);
    }

    /**
     * Fetch a unique record that has <code>channel_view_id = value</code>
     */
    public org.carl.generated.tables.pojos.ImChannelView fetchOneByChannelViewId(Long value) {
        return fetchOne(ImChannelView.IM_CHANNEL_VIEW.CHANNEL_VIEW_ID, value);
    }

    /**
     * Fetch a unique record that has <code>channel_view_id = value</code>
     */
    public Optional<org.carl.generated.tables.pojos.ImChannelView> fetchOptionalByChannelViewId(
            Long value) {
        return fetchOptional(ImChannelView.IM_CHANNEL_VIEW.CHANNEL_VIEW_ID, value);
    }

    /**
     * Fetch records that have <code>channel_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImChannelView> fetchRangeOfChannelId(
            Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ImChannelView.IM_CHANNEL_VIEW.CHANNEL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>channel_id IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImChannelView> fetchByChannelId(Long... values) {
        return fetch(ImChannelView.IM_CHANNEL_VIEW.CHANNEL_ID, values);
    }

    /**
     * Fetch records that have <code>channel_view BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImChannelView> fetchRangeOfChannelView(
            JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(
                ImChannelView.IM_CHANNEL_VIEW.CHANNEL_VIEW, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>channel_view IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImChannelView> fetchByChannelView(JSONB... values) {
        return fetch(ImChannelView.IM_CHANNEL_VIEW.CHANNEL_VIEW, values);
    }
}
