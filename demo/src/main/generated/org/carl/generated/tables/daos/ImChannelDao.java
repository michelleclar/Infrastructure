/*
 * This file is generated by jOOQ.
 */
package org.carl.generated.tables.daos;

import java.time.OffsetDateTime;
import java.util.List;
import java.util.Optional;
import org.carl.generated.tables.ImChannel;
import org.carl.generated.tables.records.ImChannelRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class ImChannelDao
        extends DAOImpl<ImChannelRecord, org.carl.generated.tables.pojos.ImChannel, Long> {

    /**
     * Create a new ImChannelDao without any configuration
     */
    public ImChannelDao() {
        super(ImChannel.IM_CHANNEL, org.carl.generated.tables.pojos.ImChannel.class);
    }

    /**
     * Create a new ImChannelDao with an attached configuration
     */
    public ImChannelDao(Configuration configuration) {
        super(ImChannel.IM_CHANNEL, org.carl.generated.tables.pojos.ImChannel.class, configuration);
    }

    @Override
    public Long getId(org.carl.generated.tables.pojos.ImChannel object) {
        return object.getChannelId();
    }

    /**
     * Fetch records that have <code>channel_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImChannel> fetchRangeOfChannelId(
            Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ImChannel.IM_CHANNEL.CHANNEL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>channel_id IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImChannel> fetchByChannelId(Long... values) {
        return fetch(ImChannel.IM_CHANNEL.CHANNEL_ID, values);
    }

    /**
     * Fetch a unique record that has <code>channel_id = value</code>
     */
    public org.carl.generated.tables.pojos.ImChannel fetchOneByChannelId(Long value) {
        return fetchOne(ImChannel.IM_CHANNEL.CHANNEL_ID, value);
    }

    /**
     * Fetch a unique record that has <code>channel_id = value</code>
     */
    public Optional<org.carl.generated.tables.pojos.ImChannel> fetchOptionalByChannelId(
            Long value) {
        return fetchOptional(ImChannel.IM_CHANNEL.CHANNEL_ID, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImChannel> fetchRangeOfCreatedAt(
            OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(ImChannel.IM_CHANNEL.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImChannel> fetchByCreatedAt(
            OffsetDateTime... values) {
        return fetch(ImChannel.IM_CHANNEL.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImChannel> fetchRangeOfUpdatedAt(
            OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(ImChannel.IM_CHANNEL.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImChannel> fetchByUpdatedAt(
            OffsetDateTime... values) {
        return fetch(ImChannel.IM_CHANNEL.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImChannel> fetchRangeOfType(
            String lowerInclusive, String upperInclusive) {
        return fetchRange(ImChannel.IM_CHANNEL.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImChannel> fetchByType(String... values) {
        return fetch(ImChannel.IM_CHANNEL.TYPE, values);
    }
}
