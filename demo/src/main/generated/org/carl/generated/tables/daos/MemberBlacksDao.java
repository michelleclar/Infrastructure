/*
 * This file is generated by jOOQ.
 */
package org.carl.generated.tables.daos;

import java.util.List;
import java.util.Optional;
import org.carl.generated.tables.MemberBlacks;
import org.carl.generated.tables.records.MemberBlacksRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class MemberBlacksDao
        extends DAOImpl<MemberBlacksRecord, org.carl.generated.tables.pojos.MemberBlacks, Long> {

    /**
     * Create a new MemberBlacksDao without any configuration
     */
    public MemberBlacksDao() {
        super(MemberBlacks.MEMBER_BLACKS, org.carl.generated.tables.pojos.MemberBlacks.class);
    }

    /**
     * Create a new MemberBlacksDao with an attached configuration
     */
    public MemberBlacksDao(Configuration configuration) {
        super(
                MemberBlacks.MEMBER_BLACKS,
                org.carl.generated.tables.pojos.MemberBlacks.class,
                configuration);
    }

    @Override
    public Long getId(org.carl.generated.tables.pojos.MemberBlacks object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.MemberBlacks> fetchRangeOfId(
            Long lowerInclusive, Long upperInclusive) {
        return fetchRange(MemberBlacks.MEMBER_BLACKS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.MemberBlacks> fetchById(Long... values) {
        return fetch(MemberBlacks.MEMBER_BLACKS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.carl.generated.tables.pojos.MemberBlacks fetchOneById(Long value) {
        return fetchOne(MemberBlacks.MEMBER_BLACKS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.carl.generated.tables.pojos.MemberBlacks> fetchOptionalById(Long value) {
        return fetchOptional(MemberBlacks.MEMBER_BLACKS.ID, value);
    }
}
