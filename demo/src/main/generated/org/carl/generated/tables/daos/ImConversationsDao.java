/*
 * This file is generated by jOOQ.
 */
package org.carl.generated.tables.daos;

import java.time.OffsetDateTime;
import java.util.List;
import java.util.Optional;
import org.carl.generated.tables.ImConversations;
import org.carl.generated.tables.records.ImConversationsRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class ImConversationsDao
        extends DAOImpl<
                ImConversationsRecord, org.carl.generated.tables.pojos.ImConversations, Long> {

    /**
     * Create a new ImConversationsDao without any configuration
     */
    public ImConversationsDao() {
        super(
                ImConversations.IM_CONVERSATIONS,
                org.carl.generated.tables.pojos.ImConversations.class);
    }

    /**
     * Create a new ImConversationsDao with an attached configuration
     */
    public ImConversationsDao(Configuration configuration) {
        super(
                ImConversations.IM_CONVERSATIONS,
                org.carl.generated.tables.pojos.ImConversations.class,
                configuration);
    }

    @Override
    public Long getId(org.carl.generated.tables.pojos.ImConversations object) {
        return object.getConversationId();
    }

    /**
     * Fetch records that have <code>conversation_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImConversations> fetchRangeOfConversationId(
            Long lowerInclusive, Long upperInclusive) {
        return fetchRange(
                ImConversations.IM_CONVERSATIONS.CONVERSATION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>conversation_id IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImConversations> fetchByConversationId(
            Long... values) {
        return fetch(ImConversations.IM_CONVERSATIONS.CONVERSATION_ID, values);
    }

    /**
     * Fetch a unique record that has <code>conversation_id = value</code>
     */
    public org.carl.generated.tables.pojos.ImConversations fetchOneByConversationId(Long value) {
        return fetchOne(ImConversations.IM_CONVERSATIONS.CONVERSATION_ID, value);
    }

    /**
     * Fetch a unique record that has <code>conversation_id = value</code>
     */
    public Optional<org.carl.generated.tables.pojos.ImConversations> fetchOptionalByConversationId(
            Long value) {
        return fetchOptional(ImConversations.IM_CONVERSATIONS.CONVERSATION_ID, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImConversations> fetchRangeOfCreatedAt(
            OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(
                ImConversations.IM_CONVERSATIONS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImConversations> fetchByCreatedAt(
            OffsetDateTime... values) {
        return fetch(ImConversations.IM_CONVERSATIONS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImConversations> fetchRangeOfUpdatedAt(
            OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(
                ImConversations.IM_CONVERSATIONS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImConversations> fetchByUpdatedAt(
            OffsetDateTime... values) {
        return fetch(ImConversations.IM_CONVERSATIONS.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>member_from_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImConversations> fetchRangeOfMemberFromId(
            Long lowerInclusive, Long upperInclusive) {
        return fetchRange(
                ImConversations.IM_CONVERSATIONS.MEMBER_FROM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>member_from_id IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImConversations> fetchByMemberFromId(
            Long... values) {
        return fetch(ImConversations.IM_CONVERSATIONS.MEMBER_FROM_ID, values);
    }

    /**
     * Fetch records that have <code>member_to_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImConversations> fetchRangeOfMemberToId(
            Long lowerInclusive, Long upperInclusive) {
        return fetchRange(
                ImConversations.IM_CONVERSATIONS.MEMBER_TO_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>member_to_id IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImConversations> fetchByMemberToId(Long... values) {
        return fetch(ImConversations.IM_CONVERSATIONS.MEMBER_TO_ID, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImConversations> fetchRangeOfType(
            String lowerInclusive, String upperInclusive) {
        return fetchRange(ImConversations.IM_CONVERSATIONS.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImConversations> fetchByType(String... values) {
        return fetch(ImConversations.IM_CONVERSATIONS.TYPE, values);
    }

    /**
     * Fetch records that have <code>channel_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.carl.generated.tables.pojos.ImConversations> fetchRangeOfChannelId(
            Long lowerInclusive, Long upperInclusive) {
        return fetchRange(
                ImConversations.IM_CONVERSATIONS.CHANNEL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>channel_id IN (values)</code>
     */
    public List<org.carl.generated.tables.pojos.ImConversations> fetchByChannelId(Long... values) {
        return fetch(ImConversations.IM_CONVERSATIONS.CHANNEL_ID, values);
    }
}
