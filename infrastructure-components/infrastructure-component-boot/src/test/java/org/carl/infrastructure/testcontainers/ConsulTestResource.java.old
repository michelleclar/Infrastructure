package org.carl.infrastructure.testcontainers;

import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;
import java.net.InetSocketAddress;
import java.util.Map;
import java.util.Optional;
import org.eclipse.microprofile.config.ConfigProvider;
import org.junit.ClassRule;
import org.testcontainers.consul.ConsulContainer;
import org.testcontainers.shaded.com.google.common.collect.ImmutableMap;

public class ConsulTestResource implements QuarkusTestResourceLifecycleManager {

    private static final String TAG = "hashicorp/consul:1.20";
    //    private static final String TAG = "hashicorp/consul:1.15";
    @ClassRule public static ConsulContainer CONTAINER;

    static {
        InetSocketAddress localhost = new InetSocketAddress("localhost", 8500);
        Optional<String> optionalValue =
                ConfigProvider.getConfig()
                        .getOptionalValue("quarkus.consul-config.agent.host-port", String.class);
        if (optionalValue.isPresent()) {
            String[] split = optionalValue.get().split(":");
            localhost = new InetSocketAddress(split[0], Integer.parseInt(split[1]));
        }
        CONTAINER =
                new ConsulContainer(TAG)
                        .withConsulCommand("kv put config/testing1 value123")
                        .withExposedPorts(localhost.getPort())
                        .withReuse(true);
    }

    @Override
    public Map<String, String> start() {
        if (!CONTAINER.isRunning()) {
            CONTAINER.start();
        }
        return ImmutableMap.of();
    }

    @Override
    public void stop() {}
}
