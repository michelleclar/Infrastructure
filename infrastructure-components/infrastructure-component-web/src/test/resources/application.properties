# app
quarkus.application.name=scaffold-beat
quarkus.application.version=1.0-beat
quarkus.http.root-path=/api/v1
quarkus.http.non-application-root-path=q
# disable docker containers
quarkus.devservices.enabled=false
#remote.ip=localhost
remote.ip=127.0.0.1
# NOTE: Whether Quarkus should enable its ability to not do a full restart when changes to classes are compatible with JVM instrumentation.
quarkus.live-reload.instrumentation=true
quarkus.http.port=8080
quarkus.shutdown.timeout=10
# NOTE: consul
quarkus.consul-config.agent.host-port=${remote.ip}:8500
quarkus.consul-config.enabled=false
quarkus.consul-config.properties-value-keys=config/${quarkus.application.name}
# NOTE:jwt https://cn.quarkus.io/guides/security-jwt#quarkus-configuration
quarkus.smallrye-jwt.enabled=true
mp.jwt.verify.publickey.location=publicKey.pem
mp.jwt.verify.issuer=https://org.carl/issuer
mp.jwt.verify.publickey.algorithm=RS256
mp.jwt.verify.clock.skew=60
mp.jwt.verify.token.age=3000000
%dev.mp.jwt.verify.token.age=3000000000000
smallrye.jwt.sign.key.location=privateKey.pem
quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".level=TRACE
quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".min-level=TRACE
# NOTE:log https://cn.quarkus.io/guides/logging
quarkus.log.level=INFO
quarkus.log.min-level=DEBUG
quarkus.log.category."org.carl.infrastructure.component.web.annotations.interceptor.ControllerLoggedInterceptor".level=DEBUG
quarkus.log.category."org.carl.infrastructure.persistence.sql".level=DEBUG
quarkus.log.file.enable=false
quarkus.log.file.path=./log/app.log
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n
quarkus.log.file.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n
quarkus.naming.enable-jndi=true
# NOTE:request
quarkus.http.cors.origins=*
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with, refreshToken
quarkus.http.cors.methods=GET,OPTIONS,POST
quarkus.jackson.serialization-inclusion=NON_NULL
%prod.quarkus.jackson.serialization-inclusion=always
# NOTE: rest-client
# NOTE:build
quarkus.package.jar.enabled=false
# NOTE: grpc https://cn.quarkus.io/guides/grpc-getting-started
quarkus.grpc.server.port=9001
#quarkus.grpc.clients.demo.host=${remote.ip}
#quarkus.grpc.clients.demo.port=50051
# NOTE: OIDC Configuration https://cn.quarkus.io/guides/security-keycloak-authorization
quarkus.oidc.auth-server-url=http://localhost:1080/realms/dev
quarkus.oidc.client-id=dev
quarkus.oidc.credentials.secret=8BR82sy9kNlKvxVPLQQ6u9pgMR5dSAiD
# Enable Policy Enforcement
quarkus.keycloak.policy-enforcer.enable=true
quarkus.oidc.roles.source=accesstoken
quarkus.oidc.application-type=web-app
# Import the realm file with Dev Services for Keycloak
# Note: This property is effective only in dev mode, not in JVM or native modes
#quarkus.keycloak.devservices.realm-path=quarkus-realm.json
