plugins {
    id 'org.kordamp.gradle.jandex'
    id 'maven-publish'
}
subprojects {
    apply {
        plugin 'org.kordamp.gradle.jandex'
        plugin 'maven-publish'
    }
    def artifactId = 'carl'
    publishing {
        publications {
            plugin(MavenPublication) {
                from components.java
                groupId = "${group}"
                artifactId = "${artifactId}"
                version = "${version}"
            }
        }
        repositories {
            //        maven {
            //            name = "GitHubPackages"
            //            url = uri("https://maven.pkg.github.com/michelleclar/Infrastructure")
            //            credentials {
            //                username = 'carl'
            //                password = System.getenv('GITHUB_TOKEN')
            //            }
            //        }
            maven {
                url = 'https://packages.aliyun.com/659e01070cab697efe1345a8/maven/repo-wdhey'
                credentials {
                    username = '659e008740b4a9e2bd75af84'
                    password = System.getenv("MAVEN_PASSWORD")
                }
            }
        }
//            publications {
//                gpr(MavenPublication) {
//                    from(components.java)
//                }
//            }
    }
    dependencies {
        //        implementation libs.bundles.base
        //        implementation libs.bundles.protocol
//        implementation libs.bundles.utils
        testImplementation libs.bundles.web
        //        implementation libs.bundles.register.center.consul
        //        api libs.bundles.share
        if (!name.startsWith('infrastructure-component-tool')) {
            api project(':infrastructure-components:infrastructure-component-tool')
        }
        def applicationEnv = new Properties()
        def envPropertiesFile = file('src/main/resources/application.properties')
        if (envPropertiesFile.exists()) {
            envPropertiesFile.withReader('UTF-8') { reader ->
                applicationEnv.load(reader)
            }
        }
    }
}
