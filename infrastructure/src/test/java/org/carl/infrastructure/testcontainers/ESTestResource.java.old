package org.carl.infrastructure.testcontainers;

import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;
import java.util.Map;
import org.junit.ClassRule;
import org.testcontainers.elasticsearch.ElasticsearchContainer;
import org.testcontainers.shaded.com.google.common.collect.ImmutableMap;

public class ESTestResource implements QuarkusTestResourceLifecycleManager {

    private static final String TAG = "docker.elastic.co/elasticsearch/elasticsearch:8.16.0";

    @ClassRule
    public static ElasticsearchContainer CONTAINER =
            new ElasticsearchContainer(TAG)
                    .withEnv("xpack.security.transport.ssl.enabled", "false")
                    .withEnv("xpack.security.http.ssl.enabled", "false")
                    .withReuse(true);

    @Override
    public Map<String, String> start() {
        if (!CONTAINER.isRunning()) {
            CONTAINER.start();
        }
        return ImmutableMap.of("quarkus.elasticsearch.hosts", CONTAINER.getHttpHostAddress());
    }

    @Override
    public void stop() {}
}
