services:
  otel-lgtm:
    image: grafana/otel-lgtm:0.11.4
    container_name: otel-lgtm
    ports:
      - "3000:3000"  # Grafana
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
    restart: on-failure
  keycloak:
    image: quay.io/keycloak/keycloak:26.1.2
    container_name: keycloak-scaffold
    ports:
      - "1080:8080"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: root
      KC_BOOTSTRAP_ADMIN_PASSWORD: root
    command: start-dev
    restart: always
  consul:
    image: hashicorp/consul:1.20
    container_name: consul-scaffold
    ports:
      - "8500:8500"
    volumes:
      - ./data:/consul/data
      - ./consul.d/:/consul/config:rw
    command: >
      consul agent -server
      -bootstrap-expect=1
      -ui
      -client=0.0.0.0
      -data-dir=/consul/data
      --config-dir=/consul/config
      -bind '{{ GetPrivateInterfaces | include "network" "172.27.0.0/16" | attr "address" }}'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8500/ui/dc1/services/consul" ]
      interval: 30s
      timeout: 10s
      retries: 3
  #  neo4j:
  #    image: neo4j:5.24.2
  #    container_name: neo4j-scaffold
  #    ports:
  #      - "17474:7474"   # Neo4j web ui
  #      - "17687:7687"   # Bolt
  #    volumes:
  #      - ./neo4j/data:/data
  #      - ./neo4j/logs:/logs
  #      - ./neo4j/config:/config
  #      - ./neo4j/plugins:/plugins
  redis:
    container_name: redis-scaffold
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: always
  pg:
    container_name: postgres-scaffold
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: db
    ports:
      - "15432:5432"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d db" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh
      #      - ./postgres:/var/lib/postgresql/data
  #    volumes:
  #      - ./postgres:/var/lib/postgresql/data
  mongodb:
    container_name: mongodb-scaffold
    image: mongo:8.0.4-noble
    ports:
      - "27017:27017"
    command:
      - "--auth"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    restart: always
  #    volumes:
  #      - ./mongodb:/data/db
  pulsar:
    container_name: pulsar-scaffold
    command: "bin/pulsar standalone"
    image: apachepulsar/pulsar:3.2.4
    ports:
      #      - "9080:8080"
      - "6650:6650"
    tty: true
    restart: always
    stdin_open: true
  es:
    container_name: elasticsearch-scaffold
    image: elasticsearch:8.16.0
    environment:
      discovery.type: single-node
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: 123456
      ES_JAVA_OPTS: -Xms64m -Xmx2048m
      xpack.security.enabled: false
    ports:
      - "19200:9200"
    restart: always
  qdrant:
    container_name: qdrant-scaffold
    image: qdrant/qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    restart: always
  migrate:
    depends_on:
      pg:
        condition: service_healthy
    image: openfga/openfga:latest
    container_name: migrate-scaffold
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://root:root@postgres-scaffold:5432/openfga?sslmode=disable
    command: migrate
    restart: on-failure
    networks:
      - default
  openfga:
    depends_on:
      migrate:
        condition: service_completed_successfully
    image: openfga/openfga:latest
    container_name: openfga-scaffold
    command: run
    restart: always
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://root:root@postgres-scaffold:5432/openfga?sslmode=disable
      - OPENFGA_DATASTORE_MAX_OPEN_CONNS=100 #see postgres container
      - OPENFGA_PLAYGROUND_ENABLED=true
    networks:
      - default
    ports:
      - "8080:8080" #http
      - "8081:8081" #grpc
      - "3000:3000" #playground
      - "2112:2112" #prometheus metrics
    healthcheck:
      test:
        [
          "CMD",
          "/usr/local/bin/grpc_health_probe",
          "-addr=openfga:8081"
        ]
      interval: 5s
      timeout: 30s
      retries: 3

#  etcd:
#    container_name: milvus-etcd-scaffold
#    image: quay.io/coreos/etcd:v3.5.16
#    environment:
#      - ETCD_AUTO_COMPACTION_MODE=revision
#      - ETCD_AUTO_COMPACTION_RETENTION=1000
#      - ETCD_QUOTA_BACKEND_BYTES=4294967296
#      - ETCD_SNAPSHOT_COUNT=50000
#    volumes:
#      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
#    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
#    healthcheck:
#      test: [ "CMD", "etcdctl", "endpoint", "health" ]
#      interval: 30s
#      timeout: 20s
#      retries: 3
#
#  minio:
#    container_name: milvus-minio-scaffold
#    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
#    environment:
#      MINIO_ACCESS_KEY: minioadmin
#      MINIO_SECRET_KEY: minioadmin
#    ports:
#      - "9001:9001"
#      - "9000:9000"
#    volumes:
#      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
#    command: minio server /minio_data --console-address ":9001"
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
#      interval: 30s
#      timeout: 20s
#      retries: 3
#
#  milvus:
#    container_name: milvus-standalone-scaffold
#    image: milvusdb/milvus:v2.5.4
#    command: [ "milvus", "run", "standalone" ]
#    security_opt:
#      - seccomp:unconfined
#    environment:
#      ETCD_ENDPOINTS: etcd:2379
#      MINIO_ADDRESS: minio:9000
#    volumes:
#      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:9091/healthz" ]
#      interval: 30s
#      start_period: 90s
#      timeout: 20s
#      retries: 3
#    ports:
#      - "19530:19530"
#      - "9091:9091"
#    depends_on:
#      - "etcd"
#      - "minio"

networks:
  default:
    name: scaffold
    driver: bridge
  milvus:
    driver: bridge
