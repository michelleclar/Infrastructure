// Code generated by ent, DO NOT EDIT.

package oidcprovider

import (
	"oidc/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLTE(FieldID, id))
}

// OidcProviderID applies equality check predicate on the "oidc_provider_id" field. It's identical to OidcProviderIDEQ.
func OidcProviderID(v int64) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldOidcProviderID, v))
}

// OidcProviderName applies equality check predicate on the "oidc_provider_name" field. It's identical to OidcProviderNameEQ.
func OidcProviderName(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldOidcProviderName, v))
}

// OidcProviderDescription applies equality check predicate on the "oidc_provider_description" field. It's identical to OidcProviderDescriptionEQ.
func OidcProviderDescription(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldOidcProviderDescription, v))
}

// Issuer applies equality check predicate on the "issuer" field. It's identical to IssuerEQ.
func Issuer(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldIssuer, v))
}

// ProxyURL applies equality check predicate on the "proxy_url" field. It's identical to ProxyURLEQ.
func ProxyURL(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldProxyURL, v))
}

// ClientID applies equality check predicate on the "client_id" field. It's identical to ClientIDEQ.
func ClientID(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldClientID, v))
}

// ClientSecret applies equality check predicate on the "client_secret" field. It's identical to ClientSecretEQ.
func ClientSecret(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldClientSecret, v))
}

// RedirectURI applies equality check predicate on the "redirect_uri" field. It's identical to RedirectURIEQ.
func RedirectURI(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldRedirectURI, v))
}

// OidcProviderIDEQ applies the EQ predicate on the "oidc_provider_id" field.
func OidcProviderIDEQ(v int64) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldOidcProviderID, v))
}

// OidcProviderIDNEQ applies the NEQ predicate on the "oidc_provider_id" field.
func OidcProviderIDNEQ(v int64) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNEQ(FieldOidcProviderID, v))
}

// OidcProviderIDIn applies the In predicate on the "oidc_provider_id" field.
func OidcProviderIDIn(vs ...int64) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldIn(FieldOidcProviderID, vs...))
}

// OidcProviderIDNotIn applies the NotIn predicate on the "oidc_provider_id" field.
func OidcProviderIDNotIn(vs ...int64) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNotIn(FieldOidcProviderID, vs...))
}

// OidcProviderIDGT applies the GT predicate on the "oidc_provider_id" field.
func OidcProviderIDGT(v int64) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGT(FieldOidcProviderID, v))
}

// OidcProviderIDGTE applies the GTE predicate on the "oidc_provider_id" field.
func OidcProviderIDGTE(v int64) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGTE(FieldOidcProviderID, v))
}

// OidcProviderIDLT applies the LT predicate on the "oidc_provider_id" field.
func OidcProviderIDLT(v int64) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLT(FieldOidcProviderID, v))
}

// OidcProviderIDLTE applies the LTE predicate on the "oidc_provider_id" field.
func OidcProviderIDLTE(v int64) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLTE(FieldOidcProviderID, v))
}

// OidcProviderNameEQ applies the EQ predicate on the "oidc_provider_name" field.
func OidcProviderNameEQ(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldOidcProviderName, v))
}

// OidcProviderNameNEQ applies the NEQ predicate on the "oidc_provider_name" field.
func OidcProviderNameNEQ(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNEQ(FieldOidcProviderName, v))
}

// OidcProviderNameIn applies the In predicate on the "oidc_provider_name" field.
func OidcProviderNameIn(vs ...string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldIn(FieldOidcProviderName, vs...))
}

// OidcProviderNameNotIn applies the NotIn predicate on the "oidc_provider_name" field.
func OidcProviderNameNotIn(vs ...string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNotIn(FieldOidcProviderName, vs...))
}

// OidcProviderNameGT applies the GT predicate on the "oidc_provider_name" field.
func OidcProviderNameGT(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGT(FieldOidcProviderName, v))
}

// OidcProviderNameGTE applies the GTE predicate on the "oidc_provider_name" field.
func OidcProviderNameGTE(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGTE(FieldOidcProviderName, v))
}

// OidcProviderNameLT applies the LT predicate on the "oidc_provider_name" field.
func OidcProviderNameLT(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLT(FieldOidcProviderName, v))
}

// OidcProviderNameLTE applies the LTE predicate on the "oidc_provider_name" field.
func OidcProviderNameLTE(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLTE(FieldOidcProviderName, v))
}

// OidcProviderNameContains applies the Contains predicate on the "oidc_provider_name" field.
func OidcProviderNameContains(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldContains(FieldOidcProviderName, v))
}

// OidcProviderNameHasPrefix applies the HasPrefix predicate on the "oidc_provider_name" field.
func OidcProviderNameHasPrefix(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldHasPrefix(FieldOidcProviderName, v))
}

// OidcProviderNameHasSuffix applies the HasSuffix predicate on the "oidc_provider_name" field.
func OidcProviderNameHasSuffix(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldHasSuffix(FieldOidcProviderName, v))
}

// OidcProviderNameEqualFold applies the EqualFold predicate on the "oidc_provider_name" field.
func OidcProviderNameEqualFold(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEqualFold(FieldOidcProviderName, v))
}

// OidcProviderNameContainsFold applies the ContainsFold predicate on the "oidc_provider_name" field.
func OidcProviderNameContainsFold(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldContainsFold(FieldOidcProviderName, v))
}

// OidcProviderDescriptionEQ applies the EQ predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionEQ(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldOidcProviderDescription, v))
}

// OidcProviderDescriptionNEQ applies the NEQ predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionNEQ(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNEQ(FieldOidcProviderDescription, v))
}

// OidcProviderDescriptionIn applies the In predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionIn(vs ...string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldIn(FieldOidcProviderDescription, vs...))
}

// OidcProviderDescriptionNotIn applies the NotIn predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionNotIn(vs ...string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNotIn(FieldOidcProviderDescription, vs...))
}

// OidcProviderDescriptionGT applies the GT predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionGT(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGT(FieldOidcProviderDescription, v))
}

// OidcProviderDescriptionGTE applies the GTE predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionGTE(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGTE(FieldOidcProviderDescription, v))
}

// OidcProviderDescriptionLT applies the LT predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionLT(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLT(FieldOidcProviderDescription, v))
}

// OidcProviderDescriptionLTE applies the LTE predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionLTE(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLTE(FieldOidcProviderDescription, v))
}

// OidcProviderDescriptionContains applies the Contains predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionContains(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldContains(FieldOidcProviderDescription, v))
}

// OidcProviderDescriptionHasPrefix applies the HasPrefix predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionHasPrefix(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldHasPrefix(FieldOidcProviderDescription, v))
}

// OidcProviderDescriptionHasSuffix applies the HasSuffix predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionHasSuffix(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldHasSuffix(FieldOidcProviderDescription, v))
}

// OidcProviderDescriptionIsNil applies the IsNil predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionIsNil() predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldIsNull(FieldOidcProviderDescription))
}

// OidcProviderDescriptionNotNil applies the NotNil predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionNotNil() predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNotNull(FieldOidcProviderDescription))
}

// OidcProviderDescriptionEqualFold applies the EqualFold predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionEqualFold(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEqualFold(FieldOidcProviderDescription, v))
}

// OidcProviderDescriptionContainsFold applies the ContainsFold predicate on the "oidc_provider_description" field.
func OidcProviderDescriptionContainsFold(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldContainsFold(FieldOidcProviderDescription, v))
}

// IssuerEQ applies the EQ predicate on the "issuer" field.
func IssuerEQ(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldIssuer, v))
}

// IssuerNEQ applies the NEQ predicate on the "issuer" field.
func IssuerNEQ(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNEQ(FieldIssuer, v))
}

// IssuerIn applies the In predicate on the "issuer" field.
func IssuerIn(vs ...string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldIn(FieldIssuer, vs...))
}

// IssuerNotIn applies the NotIn predicate on the "issuer" field.
func IssuerNotIn(vs ...string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNotIn(FieldIssuer, vs...))
}

// IssuerGT applies the GT predicate on the "issuer" field.
func IssuerGT(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGT(FieldIssuer, v))
}

// IssuerGTE applies the GTE predicate on the "issuer" field.
func IssuerGTE(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGTE(FieldIssuer, v))
}

// IssuerLT applies the LT predicate on the "issuer" field.
func IssuerLT(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLT(FieldIssuer, v))
}

// IssuerLTE applies the LTE predicate on the "issuer" field.
func IssuerLTE(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLTE(FieldIssuer, v))
}

// IssuerContains applies the Contains predicate on the "issuer" field.
func IssuerContains(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldContains(FieldIssuer, v))
}

// IssuerHasPrefix applies the HasPrefix predicate on the "issuer" field.
func IssuerHasPrefix(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldHasPrefix(FieldIssuer, v))
}

// IssuerHasSuffix applies the HasSuffix predicate on the "issuer" field.
func IssuerHasSuffix(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldHasSuffix(FieldIssuer, v))
}

// IssuerEqualFold applies the EqualFold predicate on the "issuer" field.
func IssuerEqualFold(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEqualFold(FieldIssuer, v))
}

// IssuerContainsFold applies the ContainsFold predicate on the "issuer" field.
func IssuerContainsFold(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldContainsFold(FieldIssuer, v))
}

// ProxyURLEQ applies the EQ predicate on the "proxy_url" field.
func ProxyURLEQ(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldProxyURL, v))
}

// ProxyURLNEQ applies the NEQ predicate on the "proxy_url" field.
func ProxyURLNEQ(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNEQ(FieldProxyURL, v))
}

// ProxyURLIn applies the In predicate on the "proxy_url" field.
func ProxyURLIn(vs ...string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldIn(FieldProxyURL, vs...))
}

// ProxyURLNotIn applies the NotIn predicate on the "proxy_url" field.
func ProxyURLNotIn(vs ...string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNotIn(FieldProxyURL, vs...))
}

// ProxyURLGT applies the GT predicate on the "proxy_url" field.
func ProxyURLGT(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGT(FieldProxyURL, v))
}

// ProxyURLGTE applies the GTE predicate on the "proxy_url" field.
func ProxyURLGTE(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGTE(FieldProxyURL, v))
}

// ProxyURLLT applies the LT predicate on the "proxy_url" field.
func ProxyURLLT(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLT(FieldProxyURL, v))
}

// ProxyURLLTE applies the LTE predicate on the "proxy_url" field.
func ProxyURLLTE(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLTE(FieldProxyURL, v))
}

// ProxyURLContains applies the Contains predicate on the "proxy_url" field.
func ProxyURLContains(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldContains(FieldProxyURL, v))
}

// ProxyURLHasPrefix applies the HasPrefix predicate on the "proxy_url" field.
func ProxyURLHasPrefix(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldHasPrefix(FieldProxyURL, v))
}

// ProxyURLHasSuffix applies the HasSuffix predicate on the "proxy_url" field.
func ProxyURLHasSuffix(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldHasSuffix(FieldProxyURL, v))
}

// ProxyURLIsNil applies the IsNil predicate on the "proxy_url" field.
func ProxyURLIsNil() predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldIsNull(FieldProxyURL))
}

// ProxyURLNotNil applies the NotNil predicate on the "proxy_url" field.
func ProxyURLNotNil() predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNotNull(FieldProxyURL))
}

// ProxyURLEqualFold applies the EqualFold predicate on the "proxy_url" field.
func ProxyURLEqualFold(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEqualFold(FieldProxyURL, v))
}

// ProxyURLContainsFold applies the ContainsFold predicate on the "proxy_url" field.
func ProxyURLContainsFold(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldContainsFold(FieldProxyURL, v))
}

// ClientIDEQ applies the EQ predicate on the "client_id" field.
func ClientIDEQ(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldClientID, v))
}

// ClientIDNEQ applies the NEQ predicate on the "client_id" field.
func ClientIDNEQ(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNEQ(FieldClientID, v))
}

// ClientIDIn applies the In predicate on the "client_id" field.
func ClientIDIn(vs ...string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldIn(FieldClientID, vs...))
}

// ClientIDNotIn applies the NotIn predicate on the "client_id" field.
func ClientIDNotIn(vs ...string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNotIn(FieldClientID, vs...))
}

// ClientIDGT applies the GT predicate on the "client_id" field.
func ClientIDGT(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGT(FieldClientID, v))
}

// ClientIDGTE applies the GTE predicate on the "client_id" field.
func ClientIDGTE(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGTE(FieldClientID, v))
}

// ClientIDLT applies the LT predicate on the "client_id" field.
func ClientIDLT(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLT(FieldClientID, v))
}

// ClientIDLTE applies the LTE predicate on the "client_id" field.
func ClientIDLTE(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLTE(FieldClientID, v))
}

// ClientIDContains applies the Contains predicate on the "client_id" field.
func ClientIDContains(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldContains(FieldClientID, v))
}

// ClientIDHasPrefix applies the HasPrefix predicate on the "client_id" field.
func ClientIDHasPrefix(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldHasPrefix(FieldClientID, v))
}

// ClientIDHasSuffix applies the HasSuffix predicate on the "client_id" field.
func ClientIDHasSuffix(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldHasSuffix(FieldClientID, v))
}

// ClientIDEqualFold applies the EqualFold predicate on the "client_id" field.
func ClientIDEqualFold(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEqualFold(FieldClientID, v))
}

// ClientIDContainsFold applies the ContainsFold predicate on the "client_id" field.
func ClientIDContainsFold(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldContainsFold(FieldClientID, v))
}

// ClientSecretEQ applies the EQ predicate on the "client_secret" field.
func ClientSecretEQ(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldClientSecret, v))
}

// ClientSecretNEQ applies the NEQ predicate on the "client_secret" field.
func ClientSecretNEQ(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNEQ(FieldClientSecret, v))
}

// ClientSecretIn applies the In predicate on the "client_secret" field.
func ClientSecretIn(vs ...string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldIn(FieldClientSecret, vs...))
}

// ClientSecretNotIn applies the NotIn predicate on the "client_secret" field.
func ClientSecretNotIn(vs ...string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNotIn(FieldClientSecret, vs...))
}

// ClientSecretGT applies the GT predicate on the "client_secret" field.
func ClientSecretGT(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGT(FieldClientSecret, v))
}

// ClientSecretGTE applies the GTE predicate on the "client_secret" field.
func ClientSecretGTE(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGTE(FieldClientSecret, v))
}

// ClientSecretLT applies the LT predicate on the "client_secret" field.
func ClientSecretLT(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLT(FieldClientSecret, v))
}

// ClientSecretLTE applies the LTE predicate on the "client_secret" field.
func ClientSecretLTE(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLTE(FieldClientSecret, v))
}

// ClientSecretContains applies the Contains predicate on the "client_secret" field.
func ClientSecretContains(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldContains(FieldClientSecret, v))
}

// ClientSecretHasPrefix applies the HasPrefix predicate on the "client_secret" field.
func ClientSecretHasPrefix(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldHasPrefix(FieldClientSecret, v))
}

// ClientSecretHasSuffix applies the HasSuffix predicate on the "client_secret" field.
func ClientSecretHasSuffix(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldHasSuffix(FieldClientSecret, v))
}

// ClientSecretEqualFold applies the EqualFold predicate on the "client_secret" field.
func ClientSecretEqualFold(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEqualFold(FieldClientSecret, v))
}

// ClientSecretContainsFold applies the ContainsFold predicate on the "client_secret" field.
func ClientSecretContainsFold(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldContainsFold(FieldClientSecret, v))
}

// RedirectURIEQ applies the EQ predicate on the "redirect_uri" field.
func RedirectURIEQ(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEQ(FieldRedirectURI, v))
}

// RedirectURINEQ applies the NEQ predicate on the "redirect_uri" field.
func RedirectURINEQ(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNEQ(FieldRedirectURI, v))
}

// RedirectURIIn applies the In predicate on the "redirect_uri" field.
func RedirectURIIn(vs ...string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldIn(FieldRedirectURI, vs...))
}

// RedirectURINotIn applies the NotIn predicate on the "redirect_uri" field.
func RedirectURINotIn(vs ...string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNotIn(FieldRedirectURI, vs...))
}

// RedirectURIGT applies the GT predicate on the "redirect_uri" field.
func RedirectURIGT(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGT(FieldRedirectURI, v))
}

// RedirectURIGTE applies the GTE predicate on the "redirect_uri" field.
func RedirectURIGTE(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldGTE(FieldRedirectURI, v))
}

// RedirectURILT applies the LT predicate on the "redirect_uri" field.
func RedirectURILT(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLT(FieldRedirectURI, v))
}

// RedirectURILTE applies the LTE predicate on the "redirect_uri" field.
func RedirectURILTE(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldLTE(FieldRedirectURI, v))
}

// RedirectURIContains applies the Contains predicate on the "redirect_uri" field.
func RedirectURIContains(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldContains(FieldRedirectURI, v))
}

// RedirectURIHasPrefix applies the HasPrefix predicate on the "redirect_uri" field.
func RedirectURIHasPrefix(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldHasPrefix(FieldRedirectURI, v))
}

// RedirectURIHasSuffix applies the HasSuffix predicate on the "redirect_uri" field.
func RedirectURIHasSuffix(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldHasSuffix(FieldRedirectURI, v))
}

// RedirectURIEqualFold applies the EqualFold predicate on the "redirect_uri" field.
func RedirectURIEqualFold(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldEqualFold(FieldRedirectURI, v))
}

// RedirectURIContainsFold applies the ContainsFold predicate on the "redirect_uri" field.
func RedirectURIContainsFold(v string) predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldContainsFold(FieldRedirectURI, v))
}

// EndpointsIsNil applies the IsNil predicate on the "endpoints" field.
func EndpointsIsNil() predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldIsNull(FieldEndpoints))
}

// EndpointsNotNil applies the NotNil predicate on the "endpoints" field.
func EndpointsNotNil() predicate.OidcProvider {
	return predicate.OidcProvider(sql.FieldNotNull(FieldEndpoints))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OidcProvider) predicate.OidcProvider {
	return predicate.OidcProvider(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OidcProvider) predicate.OidcProvider {
	return predicate.OidcProvider(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OidcProvider) predicate.OidcProvider {
	return predicate.OidcProvider(sql.NotPredicates(p))
}
